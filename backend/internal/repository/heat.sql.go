// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: heat.sql

package repository

import (
	"context"
)

const createHeat = `-- name: CreateHeat :one
INSERT INTO heat (eventid, heatnr)
VALUES ($1, $2) RETURNING id
`

type CreateHeatParams struct {
	Eventid int32
	Heatnr  int32
}

func (q *Queries) CreateHeat(ctx context.Context, arg CreateHeatParams) (int32, error) {
	row := q.db.QueryRow(ctx, createHeat, arg.Eventid, arg.Heatnr)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteHeatsForEvent = `-- name: DeleteHeatsForEvent :exec
DELETE FROM heat
WHERE eventid = $1
`

func (q *Queries) DeleteHeatsForEvent(ctx context.Context, eventid int32) error {
	_, err := q.db.Exec(ctx, deleteHeatsForEvent, eventid)
	return err
}

const getHeatCntForEvent = `-- name: GetHeatCntForEvent :one
SELECT count(*) FROM heat
WHERE eventid = $1
`

func (q *Queries) GetHeatCntForEvent(ctx context.Context, eventid int32) (int64, error) {
	row := q.db.QueryRow(ctx, getHeatCntForEvent, eventid)
	var count int64
	err := row.Scan(&count)
	return count, err
}
