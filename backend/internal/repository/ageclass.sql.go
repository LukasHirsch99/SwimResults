// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ageclass.sql

package repository

import (
	"context"
)

const createAgeclass = `-- name: CreateAgeclass :one
INSERT INTO ageclass (name)
VALUES ($1)
RETURNING id, name
`

func (q *Queries) CreateAgeclass(ctx context.Context, name string) (Ageclass, error) {
	row := q.db.QueryRow(ctx, createAgeclass, name)
	var i Ageclass
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const deleteAgeclassesByEvent = `-- name: DeleteAgeclassesByEvent :exec
DELETE FROM ageclass
  WHERE id in (SELECT ageclassid FROM ageclass_to_result WHERE eventid = $1)
`

func (q *Queries) DeleteAgeclassesByEvent(ctx context.Context, eventid int32) error {
	_, err := q.db.Exec(ctx, deleteAgeclassesByEvent, eventid)
	return err
}

const getAgeclassByName = `-- name: GetAgeclassByName :one
SELECT id, name FROM ageclass WHERE name = $1
`

func (q *Queries) GetAgeclassByName(ctx context.Context, name string) (Ageclass, error) {
	row := q.db.QueryRow(ctx, getAgeclassByName, name)
	var i Ageclass
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
