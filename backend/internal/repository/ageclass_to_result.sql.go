// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ageclass_to_result.sql

package repository

import (
	"context"
)

type CreateAgeclassToResultsParams struct {
	Eventid    int32
	Ageclassid int32
	Resultid   int32
}

const deleteAgeclass_to_Results_ByEvent = `-- name: DeleteAgeclass_to_Results_ByEvent :exec
DELETE FROM ageclass_to_result WHERE eventid = $1
`

func (q *Queries) DeleteAgeclass_to_Results_ByEvent(ctx context.Context, eventid int32) error {
	_, err := q.db.Exec(ctx, deleteAgeclass_to_Results_ByEvent, eventid)
	return err
}

const getAgeclassCntByEvent = `-- name: GetAgeclassCntByEvent :one
SELECT count(distinct ageclassid) FROM ageclass_to_result WHERE eventid = $1
`

func (q *Queries) GetAgeclassCntByEvent(ctx context.Context, eventid int32) (int64, error) {
	row := q.db.QueryRow(ctx, getAgeclassCntByEvent, eventid)
	var count int64
	err := row.Scan(&count)
	return count, err
}
