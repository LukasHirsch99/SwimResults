CREATE TYPE gender AS ENUM (
  'M',
  'W',
  'X'
);

-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public.ageclass
(
    id serial NOT NULL,
    eventid integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    "position" integer,
    CONSTRAINT ageclass_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ageclass_to_result
(
    ageclassid integer NOT NULL,
    resultid integer NOT NULL,
    CONSTRAINT ageclass_to_result_pkey PRIMARY KEY (ageclassid, resultid)
);

CREATE TABLE IF NOT EXISTS public.club
(
    id serial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    nationality character varying COLLATE pg_catalog."default",
    CONSTRAINT club_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event
(
    id serial NOT NULL,
    sessionid integer NOT NULL,
    displaynr integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT event_pkey PRIMARY KEY (sessionid, displaynr, name),
    CONSTRAINT event_id_key UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.heat
(
    id serial NOT NULL,
    eventid integer NOT NULL,
    heatnr integer NOT NULL,
    CONSTRAINT heat_pkey PRIMARY KEY (eventid, heatnr),
    CONSTRAINT heat_id_key UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.meet
(
    id serial NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    image character varying COLLATE pg_catalog."default",
    invitations character varying[] COLLATE pg_catalog."default",
    deadline timestamp without time zone NOT NULL,
    address character varying COLLATE pg_catalog."default" NOT NULL,
    startdate date NOT NULL,
    enddate date NOT NULL,
    googlemapslink character varying COLLATE pg_catalog."default",
    msecmid integer,
    CONSTRAINT meet_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.result
(
    id serial NOT NULL,
    eventid integer NOT NULL,
    swimmerid integer NOT NULL,
    "time" time(2) without time zone,
    splits character varying COLLATE pg_catalog."default",
    finapoints integer,
    additionalinfo character varying COLLATE pg_catalog."default",
    penalty boolean,
    reactiontime real,
    CONSTRAINT result_pkey PRIMARY KEY (eventid, swimmerid),
    CONSTRAINT result_id_key UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.session
(
    id serial NOT NULL,
    meetid integer NOT NULL,
    day date NOT NULL,
    warmupstart time without time zone,
    sessionstart time without time zone,
    displaynr integer NOT NULL,
    CONSTRAINT session_pkey PRIMARY KEY (meetid, displaynr),
    CONSTRAINT session_id_key UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.start
(
    heatid integer NOT NULL,
    swimmerid integer NOT NULL,
    lane integer NOT NULL,
    "time" time(2) without time zone,
    CONSTRAINT start_pkey PRIMARY KEY (heatid, lane)
);

CREATE TABLE IF NOT EXISTS public.swimmer
(
    id serial NOT NULL,
    birthyear integer,
    clubid integer NOT NULL,
    gender gender NOT NULL,
    firstname text COLLATE pg_catalog."default" NOT NULL,
    lastname text COLLATE pg_catalog."default" NOT NULL,
    isrelay boolean NOT NULL DEFAULT false,
    CONSTRAINT swimmer_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.ageclass
    ADD CONSTRAINT ageclass_eventid_fkey FOREIGN KEY (eventid)
    REFERENCES public.event (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ageclass_to_result
    ADD CONSTRAINT ageclass_to_result_ageclassid_fkey FOREIGN KEY (ageclassid)
    REFERENCES public.ageclass (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ageclass_to_result
    ADD CONSTRAINT ageclass_to_result_resultid_fkey FOREIGN KEY (resultid)
    REFERENCES public.result (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.event
    ADD CONSTRAINT event_sessionid_fkey FOREIGN KEY (sessionid)
    REFERENCES public.session (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.heat
    ADD CONSTRAINT heat_eventid_fkey FOREIGN KEY (eventid)
    REFERENCES public.event (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.result
    ADD CONSTRAINT result_eventid_fkey FOREIGN KEY (eventid)
    REFERENCES public.event (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.result
    ADD CONSTRAINT result_swimmerid_fkey FOREIGN KEY (swimmerid)
    REFERENCES public.swimmer (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.session
    ADD CONSTRAINT session_meetid_fkey FOREIGN KEY (meetid)
    REFERENCES public.meet (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.start
    ADD CONSTRAINT start_heatid_fkey FOREIGN KEY (heatid)
    REFERENCES public.heat (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.start
    ADD CONSTRAINT start_swimmerid_fkey FOREIGN KEY (swimmerid)
    REFERENCES public.swimmer (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.swimmer
    ADD CONSTRAINT swimmer_clubid_fkey FOREIGN KEY (clubid)
    REFERENCES public.club (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;
